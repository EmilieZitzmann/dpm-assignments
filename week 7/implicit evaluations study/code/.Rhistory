kable_classic(full_width = F)
data_trial_count <- data_amp_raw %>%
group_by(subject) %>%
summarise(trial_count = n())
#we can see that the overall count in the data seems to be 82 so we can make an overwiev of how many people do actually have 82 as a normal count
data_trial_count %>% count(trial_count == 82) %>% kable() %>%
kable_classic(full_width = F)
View(data_trial_count)
data_count_total <- data_amp_raw %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 82, "include", "exclude"))
data_count_total <- data_amp_raw %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 72, "include", "exclude"))
data_trial_count <- data_amp_raw %>%
group_by(subject) %>%
summarise(trial_count = n())
#we can see that the overall count in the data seems to be 82 so we can make an overwiev of how many people do actually have 82 as a normal count
data_trial_count %>% count(trial_count == 82) %>% kable() %>%
kable_classic(full_width = F)
data_sample <- data_amp_raw[!duplicated(data_amp_raw$subject), ]
count(data_sample) %>% kable() %>% kable_classic(full_width = F)
data_outliers <- data_trial_count %>% filter(trial_count != 82)
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(exclude_practice = ifelse(blockcode == "practice", "exclude", "include"))
View(data_amp_trials)
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice = ifelse(blockcode == "practice", "exclude", "include"))
data_amp_trials_excluded <- data_amp_trials %>%
filter(exclude_practice == "include")
data_amp_trials_excluded <- data_amp_trials %>%
filter(practice == "include")
excluded_data_trial_count <- data_amp_trials_excluded %>%
group_by(subject) %>%
summarise(trial_count = n())
# it becomes apparent that there seems to be 10 practice trials for each individual, when excluding them there is a total of 72
excluded_data_trial_count %>% count(trial_count == 72) %>% kable() %>%
kable_classic(full_width = F)
excluded_data_outliers <- excluded_data_trial_count %>% filter(trial_count != 72)
data_count_total <- data_amp_trials %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 72, "include", "exclude"))
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice = ifelse(blockcode == "practice", "yes", "no"))
data_amp_trials_excluded <- data_amp_trials %>%
filter(practice == "include")
excluded_data_trial_count <- data_amp_trials_excluded %>%
group_by(subject) %>%
summarise(trial_count = n())
# it becomes apparent that there seems to be 10 practice trials for each individual, when excluding them there is a total of 72
excluded_data_trial_count %>% count(trial_count == 72) %>% kable() %>%
kable_classic(full_width = F)
excluded_data_outliers <- excluded_data_trial_count %>% filter(trial_count != 72)
data_count_total <- data_amp_trials %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 72, "include", "exclude"))
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice = ifelse(blockcode == "practice", "exclude", "include"))
data_amp_trials_excluded <- data_amp_trials %>%
filter(practice == "include")
excluded_data_trial_count <- data_amp_trials_excluded %>%
group_by(subject) %>%
summarise(trial_count = n())
# it becomes apparent that there seems to be 10 practice trials for each individual, when excluding them there is a total of 72
excluded_data_trial_count %>% count(trial_count == 72) %>% kable() %>%
kable_classic(full_width = F)
excluded_data_outliers <- excluded_data_trial_count %>% filter(trial_count != 72)
data_count_total <- data_amp_trials %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 72, "include", "exclude"))
data_trial_count <- data_amp_raw %>%
group_by(subject) %>%
summarise(trial_count = n())
#we can see that the overall count in the data seems to be 82 so we can make an overwiev of how many people do actually have 82 as a normal count
data_trial_count %>% count(trial_count == 82) %>% kable() %>%
kable_classic(full_width = F)
data_sample <- data_amp_raw[!duplicated(data_amp_raw$subject), ]
count(data_sample) %>% kable() %>% kable_classic(full_width = F)
data_outliers <- data_trial_count %>% filter(trial_count != 82)
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice_exclusion = ifelse(blockcode == "practice", "exclude", "include"))
data_amp_trials_excluded <- data_amp_trials %>%
filter(practice_exclusion == "include")
excluded_data_trial_count <- data_amp_trials_excluded %>%
group_by(subject) %>%
summarise(trial_count = n())
# it becomes apparent that there seems to be 10 practice trials for each individual, when excluding them there is a total of 72
excluded_data_trial_count %>% count(trial_count == 72) %>% kable() %>%
kable_classic(full_width = F)
excluded_data_outliers <- excluded_data_trial_count %>% filter(trial_count != 72)
data_count_total <- data_amp_trials %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 72, "include", "exclude"))
data_amp_processed <- data_amp_trials %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 72, "include", "exclude"))
View(data_amp_trials)
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice_exclusion = ifelse(blockcode == "practice", "exclude", "include"))
data_amp_processed <- data_amp_trials %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 72, "include", "exclude"))
View(data_amp_processed)
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice_exclusion = ifelse(blockcode == "practice", "exclude", "include",
trialcode == "instructions", "exclude", "include"))
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice_exclusion = ifelse(blockcode == "practice", "exclude", "include",),
instruction_exclusion = ifelse(trialcode == "instructions", "exclude", "include"))
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice_exclusion = ifelse(blockcode == "practice", "exclude", "include",),
instruction_exclusion = ifelse(trialcode == "instructions", "exclude", "include"))
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice_exclusion = ifelse(blockcode == "practice", "exclude", "include",))
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice_exclusion = ifelse(blockcode == "practice", "exclude", "include"))
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice_exclusion = ifelse(blockcode == "practice", "exclude", "include")) %>% mutate(instruction_exclusion= ifelse(trialcode == "instructions", "exclude", "include"))
data_amp_trials_excluded <- data_amp_trials %>%
filter(practice_exclusion == "include") %>%
filter (instruction_exclusion == "include")
View(data_amp_trials_excluded)
excluded_data_trial_count <- data_amp_trials_excluded %>%
group_by(subject) %>%
summarise(trial_count = n())
View(excluded_data_trial_count)
View(data_amp_trials_excluded)
excluded_data_trial_count <- data_amp_trials_excluded %>%
group_by(subject) %>%
summarise(trial_count = n())
View(excluded_data_trial_count)
View(data_amp_raw)
excluded_data_trial_count <- data_amp_trials_excluded %>%
group_by(subject) %>%
summarise(trial_count = n())
View(excluded_data_trial_count)
excluded_data_trial_count %>% count(trial_count == 72) %>% kable() %>%
kable_classic(full_width = F)
excluded_data_outliers <- excluded_data_trial_count %>% filter(trial_count != 72)
data_amp_processed <- data_amp_trials %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 72, "include", "exclude"))
View(data_amp_processed)
View(data_amp_trials)
excluded_data_trial_count <- data_amp_trials_excluded %>%
group_by(subject) %>%
summarise(trial_count = n())
data_amp_processed <- data_amp_trials %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 72, "include", "exclude"))
View(data_amp_trials)
excluded_data_trial_count <- data_amp_trials %>%
group_by(subject) %>%
summarise(trial_count = n())
data_amp_processed <- data_amp_trials %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 72, "include", "exclude"))
data_amp_trials_excluded <- data_amp_trials %>%
filter(practice_exclusion == "include") %>%
filter (instruction_exclusion == "include")
excluded_data_trial_count <- data_amp_trials %>%
group_by(subject) %>%
summarise(trial_count = n())
View(data_trial_count)
View(excluded_data_outliers)
View(excluded_data_trial_count)
data_trial_count <- data_amp_raw %>%
group_by(subject) %>%
summarise(trial_count = n())
#we can see that the overall count in the data seems to be 82 so we can make an overwiev of how many people do actually have 82 as a normal count
data_trial_count %>% count(trial_count == 82) %>% kable() %>%
kable_classic(full_width = F)
data_sample <- data_amp_raw[!duplicated(data_amp_raw$subject), ]
count(data_sample) %>% kable() %>% kable_classic(full_width = F)
data_outliers <- data_trial_count %>% filter(trial_count != 82)
data_amp_trials_excluded <- data_amp_trials %>%
filter(practice_exclusion == "include") %>%
filter (instruction_exclusion == "include")
data_amp_trials_excluded <- data_amp_trials %>%
filter(practice_exclusion == "include") %>%
filter (instruction_exclusion == "include")
excluded_data_trial_count <- data_amp_trials %>%
group_by(subject) %>%
summarise(trial_count = n())
excluded_data_trial_count %>% count(trial_count == 72) %>% kable() %>%
kable_classic(full_width = F)
excluded_data_outliers <- excluded_data_trial_count %>% filter(trial_count != 72)
data_amp_processed <- data_amp_trials %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 72, "include", "exclude"))
data_amp_processed <- data_amp_trials %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 82, "include", "exclude"))
View(excluded_data_outliers)
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice_exclusion = ifelse(blockcode == "practice", "exclude", "include")) %>% mutate(instruction_exclusion= ifelse(trialcode == "instructions", "exclude", "include"))
data_amp_trials_excluded <- data_amp_trials %>%
filter(practice_exclusion == "include") %>%
filter (instruction_exclusion == "include")
View(data_amp_trials_excluded)
excluded_data_trial_count <- data_amp_trials_excluded %>%
group_by(subject) %>%
summarise(trial_count = n())
View(excluded_data_trial_count)
excluded_data_trial_count %>% count(trial_count == 72) %>% kable() %>%
kable_classic(full_width = F)
excluded_data_outliers <- excluded_data_trial_count %>% filter(trial_count != 72)
View(excluded_data_outliers)
data_trial_count <- data_amp_raw %>%
group_by(subject) %>%
summarise(trial_count = n())
#we can see that the overall count in the data seems to be 82 so we can make an overwiev of how many people do actually have 82 as a normal count
data_trial_count %>% count(trial_count == 82) %>% kable() %>%
kable_classic(full_width = F)
data_sample <- data_amp_raw[!duplicated(data_amp_raw$subject), ]
count(data_sample) %>% kable() %>% kable_classic(full_width = F)
count(data_sample) %>% kable() %>% kable_classic(full_width = F)
data_outliers <- data_trial_count %>% filter(trial_count != 82)
data_outliers <- data_trial_count %>% filter(trial_count != 82)
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice_exclusion = ifelse(blockcode == "practice", "exclude", "include")) %>% mutate(instruction_exclusion= ifelse(trialcode == "instructions", "exclude", "include"))
data_outliers <- data_trial_count %>% filter(trial_count != 82)
excluded_data_trial_count %>% count(trial_count == 72) %>% kable() %>%
kable_classic(full_width = F)
excluded_data_outliers <- excluded_data_trial_count %>% filter(trial_count != 72)
data_amp_processed <- data_amp_trials %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 82, "include", "exclude"))
data_trial_count <- data_amp_raw %>%
group_by(subject) %>%
summarise(trial_count = n())
data_trial_count <- data_amp_raw %>%
group_by(subject) %>%
summarise(trial_count = n())
View(data_trial_count)
#we can see that the overall count in the data seems to be 82 so we can make an overwiev of how many people do actually have 82 as a normal count
data_trial_count %>% count(trial_count == 82) %>% kable() %>%
kable_classic(full_width = F)
data_sample <- data_amp_raw[!duplicated(data_amp_raw$subject), ]
count(data_sample) %>% kable() %>% kable_classic(full_width = F)
data_sample <- data_amp_raw[!duplicated(data_amp_raw$subject), ]
count(data_sample) %>% kable() %>% kable_classic(full_width = F)
data_outliers <- data_trial_count %>% filter(trial_count != 82)
View(data_outliers)
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice_exclusion = ifelse(blockcode == "practice", "exclude", "include")) %>% mutate(instruction_exclusion= ifelse(trialcode == "instructions", "exclude", "include"))
View(data_amp_trials)
data_amp_trials_excluded <- data_amp_trials %>%
filter(practice_exclusion == "include") %>%
filter (instruction_exclusion == "include")
View(data_amp_trials_excluded)
excluded_data_trial_count <- data_amp_trials_excluded %>%
group_by(subject) %>%
summarise(trial_count = n())
View(excluded_data_trial_count)
excluded_data_trial_count %>% count(trial_count == 72) %>% kable() %>%
kable_classic(full_width = F)
excluded_data_outliers <- excluded_data_trial_count %>% filter(trial_count != 72)
View(excluded_data_trial_count)
View(excluded_data_outliers)
data_amp_trials_excluded <- data_amp_trials %>%
filter(practice_exclusion == "include") %>%
filter (instruction_exclusion == "include")
View(data_amp_trials_excluded)
excluded_data_trial_count <- data_amp_trials %>%
group_by(subject) %>%
summarise(trial_count = n())
excluded_data_trial_count %>% count(trial_count == 72) %>% kable() %>%
kable_classic(full_width = F)
excluded_data_outliers <- excluded_data_trial_count %>% filter(trial_count != 72)
View(excluded_data_outliers)
excluded_data_outliers <- excluded_data_trial_count %>% filter(trial_count != 72)
excluded_data_trial_count <- data_amp_trials %>%
group_by(subject) %>%
summarise(trial_count = n())
View(excluded_data_trial_count)
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice_exclusion = ifelse(blockcode == "practice", "exclude", "include")) %>% mutate(instruction_exclusion= ifelse(trialcode == "instructions", "exclude", "include"))
View(data_amp_trials_excluded)
View(data_amp_trials)
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice_exclusion = ifelse(blockcode == "practice", "exclude", "include")) %>% mutate(instruction_exclusion= ifelse(trialcode == "instructions", "exclude", "include"))
View(data_amp_trials)
data_amp_trials_excluded <- data_amp_trials %>%
filter(practice_exclusion == "include") %>%
filter (instruction_exclusion == "include")
excluded_data_trial_count <- data_amp_trials %>%
group_by(subject) %>%
summarise(trial_count = n())
View(excluded_data_trial_count)
excluded_data_trial_count %>% count(trial_count == 72) %>% kable() %>%
kable_classic(full_width = F)
excluded_data_trial_count %>% count(trial_count != 72) %>% kable() %>%
kable_classic(full_width = F)
data_amp_processed <- data_amp_trials %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 82, "include", "exclude"))
data_trial_count <- data_amp_raw %>%
group_by(subject) %>%
summarise(trial_count = n())
#we can see that the overall count in the data seems to be 82 so we can make an overwiev of how many people do actually have 82 as a normal count
data_trial_count %>% count(trial_count == 82) %>% kable() %>%
kable_classic(full_width = F)
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice_exclusion = ifelse(blockcode == "practice", "exclude", "include")) %>% mutate(instruction_exclusion= ifelse(trialcode == "instructions", "exclude", "include"))
#compare the datasets with 82 and 72
excluded_data_trial_count <- data_amp_trials %>%
group_by(subject) %>%
summarise(trial_count = n())
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice_exclusion = ifelse(blockcode == "practice", "exclude", "include")) %>% mutate(instruction_exclusion= ifelse(trialcode == "instructions", "exclude", "include"))
#compare the datasets with 82 and 72
excluded_data_trial_count <- data_amp_trials %>%
group_by(subject) %>%
summarise(trial_count = n())
View(excluded_data_trial_count)
data_amp_trials_excluded <- data_amp_trials %>%
filter(practice_exclusion == "include") %>%
filter (instruction_exclusion == "include")
data_amp_trials_excluded <- data_amp_trials %>%
filter(practice_exclusion == "include") %>%
filter (instruction_exclusion == "include")
excluded_data_trial_count <- data_amp_trials_excluded %>%
group_by(subject) %>%
summarise(trial_count = n())
View(excluded_data_trial_count)
excluded_data_trial_count %>% count(trial_count != 72) %>% kable() %>%
kable_classic(full_width = F)
excluded_data_outliers <- excluded_data_trial_count %>% filter(trial_count != 72)
View(excluded_data_outliers)
data_amp_processed <- data_amp_trials %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 82, "include", "exclude"))
View(data_amp_processed)
#By taking a closer look at the data_amp_raw we see that there is still people with a practice blockcode that we might not want to have in our final dataset so we flag them with exclude include as before:
data_amp_trials <- data_amp_raw %>%
mutate(practice_exclusion = ifelse(blockcode == "practice", "exclude", "include")) %>% mutate(instruction_exclusion= ifelse(trialcode == "instructions", "exclude", "include"))
data_amp_processed <- data_amp_trials %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 82, "include", "exclude"))
View(data_amp_processed)
excluded_data_trial_count %>% count(trial_count != 72) %>% kable() %>%
kable_classic(full_width = F)
excluded_data_outliers <- excluded_data_trial_count %>% filter(trial_count != 72)
data_sample <- data_amp_raw[!duplicated(data_amp_raw$subject), ]
View(data_sample)
count(data_sample) %>% kable() %>% kable_classic(full_width = F)
data_outliers <- data_trial_count %>% filter(trial_count != 82)
excluded_data_trial_count <- data_amp_trials_excluded %>%
group_by(subject) %>%
summarise(trial_count = n())
View(excluded_data_trial_count)
excluded_data_trial_count <- data_amp_trials %>%
group_by(subject) %>%
summarise(trial_count = n())
View(excluded_data_trial_count)
excluded_data_trial_count <- data_amp_trials %>%
group_by(subject) %>%
summarise(trial_count = n())
excluded_data_trial_count <- data_amp_trials_excluded %>%
group_by(subject) %>%
summarise(trial_count = n())
data_amp_trials_excluded <- data_amp_trials %>%
filter(practice_exclusion == "include") %>%
filter (instruction_exclusion == "include")
excluded_data_trial_count <- data_amp_trials_excluded %>%
group_by(subject) %>%
summarise(trial_count = n())
data_amp_processed <- data_amp_trials %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 82, "include", "exclude"))
data_amp_processed <- data_amp_trials %>%
mutate(exclude_outliers = ifelse(trial_count == 82, "include", "exclude"))
data_amp_processed <- data_trial_count %>%
mutate(exclude_outliers = ifelse(trial_count == 82, "include", "exclude"))
View(data_amp_processed)
data_amp_processed <- data_amp_trials %>%
left_join(excluded_data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 82, "include", "exclude"))
data_amp_processed <- data_amp_trials %>%
left_join(data_trial_count, by = "subject") %>% mutate(exclude_outliers = ifelse(trial_count == 82, "include", "exclude"))
View(data_amp_processed)
library(tidyverse)
library(janitor) # for clean_names()
library(stringr)
# demographics
data_demographics_raw <- read_csv("../data/raw/data_demographics_raw.csv") |>
library(tidyverse)
library(janitor) # for clean_names()
library(stringr)
# demographics
data_demographics_raw <- read_csv("../data/raw/data_demographics_raw.csv") |>
sessionInfo()
# demographics
data_demographics_raw <- read_csv("../data/raw/data_demographics_raw.csv") %>%
janitor::clean_names()
# self report measure
data_selfreport_raw <- read_csv("../data/raw/data_selfreport_raw.csv") %>%
janitor::clean_names()
# affect attribution procedure
data_amp_raw <- read_csv("../data/raw/data_amp_raw.csv") %>%
janitor::clean_names()
dat_age_gender <- data_demographics_raw %>%
select(subject, date, time, trialcode, response) %>%
pivot_wider(names_from = trialcode,
values_from = response) %>%
mutate(gender = tolower(gender),
gender = stringr::str_remove_all(gender, regex("\\W+")), # regex is both very useful and awful to write
gender = case_when(gender == "female" ~ gender,
gender == "male" ~ gender,
gender == "nonbinary" ~ gender,
gender == "woman" ~ "female",
gender == "man" ~ "male",
TRUE ~ "other/missing/error"),
age = case_when(str_detect(age, "^[0-9]+$") ~ age, # if the value is only numbers, keep it.
TRUE ~ "other/missing/error"))
data_amp_performance_criteria <- data_amp_raw %>%
filter(blockcode != "practice",
trialcode != "instructions") %>%
mutate(latency_prob = if_else(latency < 100, TRUE, FALSE)) %>%
group_by(subject) %>%
summarize(proportion_fast_trials_amp = mean(latency_prob)) %>%
mutate(exclude_amp_performance = ifelse(proportion_fast_trials_amp > 0.10, "exclude", "include"))
# determine modal number of trials
data_amp_completeness <- data_amp_raw %>%
filter(blockcode != "practice",
trialcode != "instructions") %>%
group_by(subject) %>%
count() %>%
ungroup() %>%
mutate(exclude_amp_completeness = ifelse(n == 72, "include", "exclude")) %>%
select(-n)
# trial level data
data_selfreport_trial_level <- data_selfreport_raw %>%
select(subject, trialcode, response) %>%
filter(trialcode %in% c("like", "prefer", "positive")) %>%
rename(item = trialcode) %>%
filter(response != "Ctrl+'B'") %>%
mutate(response = as.numeric(response))
# mean scored
data_selfreport_mean_score <- data_selfreport_trial_level %>%
group_by(subject) %>%
summarize(mean_evaluation = mean(response, na.rm = TRUE))
# combined
data_selfreport_scored <-
full_join(data_selfreport_trial_level %>%
pivot_wider(names_from = "item",
values_from = "response"),
data_selfreport_mean_score,
by = "subject")
# combine all dfs created in the previous chunks
data_processed_temp <- dat_age_gender %>%
full_join(data_selfreport_scored, by = "subject") %>%
full_join(data_amp_performance_criteria, by = "subject") %>%
full_join(data_amp_completeness, by = "subject")
# flag all subjects with more than one row in the wide-format data. these should be excluded in the analysis.
# a more elaborate approach would be to track down the individual dupicate cases and determine which of the mulitiple cases should be retained.
data_processed_duplicates <- data_processed_temp %>%
count(subject) %>%
mutate(exclude_duplicate_data = if_else(n > 1, "exclude", "include")) %>%
select(-n)
# join in the duplicates df
data_processed_before_exclusions <- data_processed_temp %>%
full_join(data_processed_duplicates, by = "subject")
View(data_amp_raw)
data_amp_testblock <- select(subject, trialcode, correct ) %>%
#filter() %>%
#mutate() %>%
#group_by() %>%
#summarize()
```
data_amp_testblock <- data_amp_raw %>% select(subject, trialcode, correct )
View(data_amp_testblock)
data_amp_testblock <- data_amp_raw %>% select(subject, trialcode, correct ) %>%
filter(blockcode != "practice",
trialcode != "instructions" )
data_amp_testblock <- data_amp_raw %>% select(subject, trialcode, correct, blockcode ) %>%
filter(blockcode != "practice",
trialcode != "instructions" )
data_amp_testblock <- data_amp_raw %>% filter(blockcode != "practice",
trialcode != "instructions" ) %>%
select(subject, trialcode, correct)
data_amp_testblock <- data_amp_raw %>% filter(blockcode != "practice",
trialcode != "instructions" ) %>%
select(subject, trialcode, correct) %>%
mutate(case_when(trialcode == prime_positive | correct == 1 ~ "prime congrent", "incongruent")) %>% group_by(subject)
data_amp_testblock <- data_amp_raw %>% filter(blockcode != "practice",
trialcode != "instructions" ) %>%
select(subject, trialcode, correct) %>%
mutate(case_when(trialcode = prime_positive | correct = 1 ~ "prime congrent", "incongruent")) %>% group_by(subject)
data_amp_testblock <- data_amp_raw %>% filter(blockcode != "practice",
data_amp_testblock <- data_amp_raw %>% filter(blockcode != "practice",
trialcode != "instructions" ) %>%
select(subject, trialcode, correct) %>%
mutate(case_when(trialcode = prime_positive | correct = 1 ~ "prime congrent", "incongruent")) %>% group_by("subject")
data_amp_testblock <- data_amp_raw %>% filter(blockcode != "practice",
trialcode != "instructions" ) %>%
select(subject, trialcode, correct) %>%
mutate(prime_ccongruency = case_when(trialcode == "prime_positive" & correct == 1 ~ "prime congrent", "incongruent", TRUE ~ "incongruent" ))
data_amp_testblock <- data_amp_raw %>% filter(blockcode != "practice",
trialcode != "instructions" ) %>%
select(subject, trialcode, correct) %>%
mutate(prime_ccongruency = case_when(trialcode == prime_positive & correct == 1 ~ "prime congruent", "incongruent", TRUE ~ "incongruent" ))
data_correct_trials <- data_amp_raw %>%
filter(blockcode != "practice",
trialcode != "instructions") %>%
select(subject, trialcode, correct) %>%
mutate(prime_congruency = case_when((trialcode == "prime_positive" &
correct == 1 ) |
(trialcode == "prime_negative" &
correct == 0)~ "congruent",
TRUE ~"incongruent"))
